{"remainingRequest":"/Users/zhangzhenghui/Documents/test/project-test/node_modules/babel-loader/lib/index.js!/Users/zhangzhenghui/Documents/test/project-test/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhangzhenghui/Documents/test/project-test/src/components/utils/axios.js","dependencies":[{"path":"/Users/zhangzhenghui/Documents/test/project-test/src/components/utils/axios.js","mtime":1587624039430},{"path":"/Users/zhangzhenghui/Documents/test/project-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangzhenghui/Documents/test/project-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangzhenghui/Documents/test/project-test/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBBeGlvcyBmcm9tICJheGlvcyI7CkF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgaWYgKHRva2VuKSB7CiAgICAvLyDmr4/mrKHlj5HpgIHor7fmsYLkuYvliY3liKTmlq3mmK/lkKblrZjlnKh0b2tlbu+8jOWmguaenOWtmOWcqO+8jOWImee7n+S4gOWcqGh0dHDor7fmsYLnmoRoZWFkZXLpg73liqDkuIp0b2tlbu+8jOS4jeeUqOavj+asoeivt+axgumDveaJi+WKqOa3u+WKoOS6hgogICAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IHRva2VuOwogIH0gLy8gc3JhdGxvYWQoKTsKCgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnIpIHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyKTsKfSk7IC8vIGh0dHAgcmVzcG9uc2Ug5pyN5Yqh5Zmo5ZON5bqU5oum5oiq5Zmo77yM6L+Z6YeM5oum5oiqNDAx6ZSZ6K+v77yM5bm26YeN5paw6Lez5YWl55m76aG16YeN5paw6I635Y+WdG9rZW4KCkF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLy8gaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDAgfHwgcmVzcG9uc2Uuc3RhdHVzID09IDIwMSl7ICAKICAvLyAgIGVuZGxvYWQoKTsKICAvLyB9CiAgcmV0dXJuIHJlc3BvbnNlOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlLnN0YXR1cyk7CgogICAgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PSA0MDEpIHsKICAgICAgYWx0LmVycm9yKCLnmbvpmYblpLHmlYgs6K+36YeN5paw55m75b2VISIpOwogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgbG9jYXRpb24uaHJlZiA9ICcvaW5kZXguaHRtbCc7CiAgICAgIH0sIDIwMDApOwogICAgfQogIH0gLy8gcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yLnJlc3BvbnNlLmRhdGEpCgp9KTs="},{"version":3,"sources":["/Users/zhangzhenghui/Documents/test/project-test/src/components/utils/axios.js"],"names":["Axios","interceptors","request","use","config","token","headers","Authorization","err","Promise","reject","response","error","console","log","status","alt","localStorage","removeItem","setTimeout","location","href"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAAAC,MAAM,EAAI;AAER,MAAIC,KAAJ,EAAW;AAAG;AACZD,IAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAA+BF,KAA/B;AACD,GAJO,CAKR;;;AACA,SAAOD,MAAP;AACD,CARL,EASI,UAAAI,GAAG,EAAI;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAXL,E,CAaE;;AACAR,KAAK,CAACC,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CACE,UAAAQ,QAAQ,EAAI;AACV;AACA;AACA;AAEA,SAAOA,QAAP;AACD,CAPH,EAQE,UAAAC,KAAK,EAAI;AACP,MAAIA,KAAK,CAACD,QAAV,EAAoB;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACD,QAAN,CAAeI,MAA3B;;AACA,QAAGH,KAAK,CAACD,QAAN,CAAeI,MAAf,IAAyB,GAA5B,EAAgC;AAC9BC,MAAAA,GAAG,CAACJ,KAAJ,CAAU,aAAV;AACAK,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAC,MAAAA,UAAU,CAAC,YAAY;AACrBC,QAAAA,QAAQ,CAACC,IAAT,GAAgB,aAAhB;AACD,OAFS,EAEP,IAFO,CAAV;AAID;AACF,GAXM,CAYP;;AACD,CArBH","sourcesContent":["import Axios from \"axios\"\nAxios.interceptors.request.use(\n    config => {\n    \n      if (token) {  // 每次发送请求之前判断是否存在token，如果存在，则统一在http请求的header都加上token，不用每次请求都手动添加了\n        config.headers.Authorization = token;\n      }\n      // sratload();\n      return config;\n    },\n    err => {\n      return Promise.reject(err);\n    });\n  \n  // http response 服务器响应拦截器，这里拦截401错误，并重新跳入登页重新获取token\n  Axios.interceptors.response.use(\n    response => {\n      // if (response.status == 200 || response.status == 201){  \n      //   endload();\n      // }\n  \n      return response;\n    },\n    error => {\n      if (error.response) {\n        console.log(error.response.status)\n        if(error.response.status == 401){\n          alt.error(\"登陆失效,请重新登录!\");\n          localStorage.removeItem('token');\n          setTimeout(function () {\n            location.href = '/index.html';\n          }, 2000);\n  \n        }\n      }\n      // return Promise.reject(error.response.data)\n    });"]}]}